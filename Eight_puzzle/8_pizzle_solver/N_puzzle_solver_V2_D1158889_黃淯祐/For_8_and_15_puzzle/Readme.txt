For 8-puzzle and 15-puzzle

我使用 IDA* 這個演算法

因為當初使用範例程式時，越後面記憶體使用越多，並且node產生的速度越來越慢

於是上網搜尋到IDA*這個方法

製作完成後，整體速度的確提升很多

並且是得到的解是最佳解

後來我將heuristic改為 manhattan distance + linear conflic

能使heuristic的值更接近且不大於實際所需步數

這樣能使執行效率更快

但當N更大時，像24-puzzle以上的，這個程式的執行時間就會太久，久到我等不下去了

最長的時間我等了4個小時，還沒得到答案

後來想嘗試使用切斷的方法

當執行到一定深度，就把該深度的那些值丟到其他檔案，當成新的初始值，再繼續往下找

雖然我有成功做出開新資料夾寫檔案跟讀該資料夾的檔案的程式

但覺得太麻煩了，於是放棄這個方法

後來得知不需要是最佳解

於是我放棄使用這種搜索的方法，改用其他approach


--written by D1158889 黃淯祐  2023/05/14